{{define "types"}}
  //
  // Types
  //

{{- if .Messages -}}
{{range .Messages -}}

{{if .Type | isEnum -}}
{{$enumName := .Name}}
enum {{$enumName}} {
{{- range $i, $field := .Fields}}
  {{- if $i}},{{end}}
  {{$field.Name}}
{{- end}}
}
{{end -}}

{{- if .Type | isStruct  }}
class {{.Name}} {
{{- range .Fields}}
  {{.Type | fieldType}}{{- if .Optional}}?{{end}}{{" "}}{{if . | exportableField -}}{{. | exportedJSONField}};{{- end -}}{{end}}
//<editor-fold desc="Data Methods" defaultstate="collapsed">
  {{.Name}}({
  {{- range .Fields}}
  {{- if not .Optional}}
    @required this.{{ if . | exportableField -}}{{. | exportedJSONField}};{{- end -}}
  {{else}}
    this.{{ if . | exportableField -}}{{. | exportedJSONField}};{{- end -}}
  {{- end -}}
  {{- end}}
  });

  @override
  bool operator ==(Object other) =>
  {{ $last := . | lastField -}}
  identical(this, other) ||
  (other is {{.Name}} &&
    runtimeType == other.runtimeType &&
    {{- range .Fields}}
    {{ if . | exportableField -}}{{. | exportedJSONField}}{{- end }} == other.{{ if . | exportableField -}}{{. | exportedJSONField}} {{if ne .Name $last.Name}}&&{{- end -}}{{- end}}
    {{- end -}});
{{- end}}
//</editor-fold>
}
{{end -}}
{{end -}}
{{end -}}
