import 'package:meta/meta.dart';

import 'package:http/http.dart' as http;


// example v0.0.1 11dde8c07720e169608bc087bb919a5761d7047f
// --
// This file has been generated by https://github.com/webrpc/webrpc using gen/golang
// Do not edit by hand. Update your webrpc schema and re-generate.

// WebRPC description and code-gen version
String webRPCVersion()  {
  return "v1";
}

// Schema version of your RIDL schema
String WebRPCSchemaVersion() {
  return "v0.0.1";
}

// Schema hash generated from your RIDL schema
String WebRPCSchemaHash() {
  return "11dde8c07720e169608bc087bb919a5761d7047f";
}


  //
  // Types
  //
enum Kind {
  USER,
  ADMIN
}

//</editor-fold>
}

class Empty {
//<editor-fold desc="Data Methods" defaultstate="collapsed">
  Empty({
  });

  @override
  bool operator ==(Object other) =>
//</editor-fold>
}

class User {
  int id;
  String USERNAME;
  String role;
//<editor-fold desc="Data Methods" defaultstate="collapsed">
  User({
    @required this.id;
    @required this.USERNAME;
    @required this.role;
  });

  @override
  bool operator ==(Object other) =>
//</editor-fold>
}

class SearchFilter {
  String q;
//<editor-fold desc="Data Methods" defaultstate="collapsed">
  SearchFilter({
    @required this.q;
  });

  @override
  bool operator ==(Object other) =>
//</editor-fold>
}

class Version {
  String webrpcVersion;
  String schemaVersion;
  String schemaHash;
//<editor-fold desc="Data Methods" defaultstate="collapsed">
  Version({
    @required this.webrpcVersion;
    @required this.schemaVersion;
    @required this.schemaHash;
  });

  @override
  bool operator ==(Object other) =>
//</editor-fold>
}

class ComplexType {
  Map<String, dynamic> meta;
  Map<String, Map<String, int>> metaNestedExample;
  List<String> namesList;
  List<int> numsList;
  List<List<String>> doubleArray;
  List<Map<String, int>> listOfMaps;
  List<User> listOfUsers;
  Map<String, User> mapOfUsers;
  User user;
//<editor-fold desc="Data Methods" defaultstate="collapsed">
  ComplexType({
    @required this.meta;
    @required this.metaNestedExample;
    @required this.namesList;
    @required this.numsList;
    @required this.doubleArray;
    @required this.listOfMaps;
    @required this.listOfUsers;
    @required this.mapOfUsers;
    @required this.user;
  });

  @override
  bool operator ==(Object other) =>
//</editor-fold>
}





  

//
// Client
//

String _removeSlash(String host) => host.endsWith('/')
? host.replaceRange(host.length - 1, host.length, '')
: host;


class ExampleService {
  final http.Client client;
  final String host;
  final String path = '/rpc/ExampleService/';
  String url(String name) => '${_removeSlash(host)}$path$name';
  

  

  

  

  

  
  ExampleService(this.client, this.host);
}









//
// Helpers
//


